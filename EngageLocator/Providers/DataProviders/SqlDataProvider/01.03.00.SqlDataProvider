
if not exists (select * from dbo.syscolumns where name = 'Approved' and id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_Location]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_Location]
 ADD Approved bit
GO

UPDATE {databaseOwner}[{objectQualifier}EngageLocator_Location] set Approved = 1
GO

if not exists (select * from dbo.syscolumns where name = 'Approved' and id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_TempLocation]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_TempLocation]
 ADD Approved bit
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetEngageLocatorTabModules]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetEngageLocatorTabModules]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetEngageLocatorTabModules]
	@portalId int
AS
	select 
		t.Title, tm.TabId, m.ModuleTitle, tm.ModuleId 
	from {databaseOwner}[{objectQualifier}TabModules] tm 
		join {databaseOwner}[{objectQualifier}Modules] m on (tm.ModuleId = m.ModuleId)
		join {databaseOwner}[{objectQualifier}ModuleDefinitions] md on (m.ModuleDefId = md.ModuleDefId)
		join {databaseOwner}[{objectQualifier}Tabs] t on (tm.TabId = t.TabId)
	where 
		t.PortalId = @portalId
		and m.IsDeleted = 0
		and t.IsDeleted = 0
		and t.IsVisible = 1
		and md.FriendlyName = 'EngageLocator'
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spInsertLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spInsertLocation]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spInsertLocation]
	@ExternalIdentifier nvarchar(255),
	@Name nvarchar(255),
	@Website nvarchar(255),
	@Latitude float,
	@Longitude float,
	@CountryName nvarchar(255),
	@StateAbbreviation nvarchar(50),
	@City nvarchar(255),
	@Address nvarchar(255),
	@PostalCode nvarchar(255),
	@Phone nvarchar(255),
	@LocationDetails nvarchar(255),
	@LocationTypeId int,
	@CsvLineNumber int,
	@PortalId int,
	@successful varchar(25),
	@approved bit,
	@Report nvarchar(2000) = '' OUTPUT 	
AS
DECLARE @CountryId int
	SELECT @CountryId = EntryId FROM {databaseOwner}[{objectQualifier}Lists] WHERE [Text] = @CountryName and ListName = 'Country'

	DECLARE @RegionId int
	SELECT @RegionId = EntryId FROM {databaseOwner}[{objectQualifier}Lists] WITH (NOLOCK) WHERE [Value] = @StateAbbreviation 
	AND ListName = 'Region'
	--We've already added all necessary states, we'll just ignore it if it isn't in the list

	INSERT INTO {databaseOwner}[{objectQualifier}EngageLocator_TempLocation] (ExternalIdentifier, Name, Website, Latitude, Longitude, CountryId, RegionId, City, Address, PostalCode, Phone, LocationDetails, LocationTypeId, PortalId, LastUpdatedDate, CsvLineNumber, Approved)
	VALUES (@ExternalIdentifier, @Name, @Website, @Latitude, @Longitude, @CountryId, @RegionId, @City, @Address, @PostalCode, @Phone, @LocationDetails, @LocationTypeId, @PortalId, getdate(), 0, @approved)
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spInsertTempLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spInsertTempLocation]
GO

CREATE  PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spInsertTempLocation]
	@ExternalIdentifier nvarchar(255),
	@Name nvarchar(255),
	@Website nvarchar(255),
	@Latitude float,
	@Longitude float,
	@CountryId int,
	@RegionId int,
	@City nvarchar(255),
	@Address nvarchar(255),
	@PostalCode nvarchar(255),
	@Phone nvarchar(255),
	@LocationDetails nvarchar(255),
	@LocationTypeId int,
	@CsvLineNumber int,
	@PortalId int,
	@successful varchar(25),
	@approved bit,
	@Report nvarchar(2000) = '' OUTPUT 
AS
	Insert into {databaseOwner}[{objectQualifier}EngageLocator_TempLocation] (ExternalIdentifier, [Name], Website, Latitude, Longitude, CountryId, RegionId, City, [Address], PostalCode, Phone, LocationDetails, LocationTypeId, LastUpdatedDate, CsvLineNumber, PortalId, Successful, Approved)
	VALUES (@ExternalIdentifier, @Name, @Website, @Latitude, @Longitude, @CountryId, @RegionId, @City, @Address, @PostalCode, @Phone, @LocationDetails, @LocationTypeId, getdate(), @CsvLineNumber, @PortalId, @successful, @approved)
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spCopyLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spCopyLocation]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spCopyLocation]
AS
INSERT INTO 
	{databaseOwner}[{objectQualifier}EngageLocator_Location] (
	ExternalIdentifier,
	[Name],
	Website,
	Latitude,
	Longitude,
	CountryId,
	RegionId,
	City,
	Address,
	PostalCode,
	Phone,
	LocationDetails,
	LocationTypeId,
	PortalId,
	LastUpdatedDate,
	CSVLineNumber,
	Approved
	)
SELECT 
	ExternalIdentifier,
    [Name],
	Website,
	Latitude,
	Longitude,
	CountryId,
	RegionId,
	City,
	Address,
	PostalCode,
	Phone,
	LocationDetails,
	LocationTypeId,
	PortalId,
	LastUpdatedDate,
	CSVLineNumber,
	Approved
FROM 
	{databaseOwner}[{objectQualifier}EngageLocator_TempLocation]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_vLocations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view {databaseOwner}[{objectQualifier}EngageLocator_vLocations]
GO

CREATE VIEW {databaseOwner}[{objectQualifier}EngageLocator_vLocations]
AS
	SELECT l.LocationId, l.LocationTypeId, l.ExternalIdentifier, l.Name, l.Website, l.Latitude, l.Longitude, l.RegionId, 
		country.Text AS CountryName, l.City, l.Address, l.PostalCode, l.Phone, l.LocationDetails, l.PortalId, l.LastUpdatedDate, 
		p.LocationTypeName AS [Type], region.Text AS StateName, region.Value as Abbreviation,
		l.CountryId
	FROM {databaseOwner}[{objectQualifier}EngageLocator_Location] l WITH (NOLOCK) 
	JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocationType] AS p ON (l.LocationTypeId = p.LocationTypeId)
	left JOIN {databaseOwner}[{objectQualifier}lists] country on (country.EntryId = l.CountryId)
	left JOIN {databaseOwner}[{objectQualifier}lists] region on (region.EntryId = l.RegionId)

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocation]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocation]
	@locationId int
AS
	SELECT 
			LocationId, ExternalIdentifier, l.[Name], Latitude, Longitude, City, region.Text as StateName, region.EntryId as RegionId, Address, Phone, 
			LocationDetails, LocationTypeId, PostalCode, Website, LocationDetails, Approved
		FROM 
			{databaseOwner}[{objectQualifier}EngageLocator_Location] l  
			join {databaseOwner}[{objectQualifier}Lists] region on (l.RegionId = region.EntryId)
		WHERE 
			LocationId = @locationId
			
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_vLocations]') and OBJECTPROPERTY(id, N'IsView') = 1)
drop view {databaseOwner}[{objectQualifier}EngageLocator_vLocations]
GO

CREATE VIEW {databaseOwner}[{objectQualifier}EngageLocator_vLocations]
AS
	SELECT l.LocationId, l.LocationTypeId, l.ExternalIdentifier, l.Name, l.Website, l.Latitude, l.Longitude, 
		country.Text AS CountryName, l.City, l.Address, l.PostalCode, l.Phone, l.LocationDetails, l.PortalId, l.LastUpdatedDate, 
		p.LocationTypeName AS [Type], region.Text AS StateName, region.Value as Abbreviation,
		l.CountryId, l.Approved, l.RegionId
	FROM {databaseOwner}[{objectQualifier}EngageLocator_Location] l WITH (NOLOCK) 
	JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocationType] AS p ON (l.LocationTypeId = p.LocationTypeId)
	left JOIN {databaseOwner}[{objectQualifier}lists] country on (country.EntryId = l.CountryId)
	left JOIN {databaseOwner}[{objectQualifier}lists] region on (region.EntryId = l.RegionId)

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByLTID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByLTID]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByLTID]
	@LocationTypeId int
AS

	SELECT * FROM {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes] lta
	INNER JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocationType] lt ON lt.LocationTypeId = lta.LocationTypeId
	WHERE lt.LocationTypeId = @LocationTypeId
	ORDER BY lta.ViewOrder 
	
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetAllLocations]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetAllLocations]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetAllLocations]
	@PortalId int,
	@approved bit
AS

	SELECT LocationId, ExternalIdentifier, Name, WebSite, Abbreviation, StateName, CountryName as Country, CountryId, RegionId, City, Address, Latitude, Longitude, Phone, LocationDetails, [Type], PostalCode, Approved
	FROM {databaseOwner}[{objectQualifier}EngageLocator_vLocations]
	WHERE PortalId = @PortalId
	and Approved = @approved
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spUpdateLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spUpdateLocation]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spUpdateLocation]
	@LocationId int,
	@ExternalIdentifier nvarchar(255),
	@LocationTypeId int,
	@Name nvarchar(255),
	@Website nvarchar(255),
	@Latitude float,
	@Longitude float,
	@CountryId int,
	@RegionId int,
	@City nvarchar(255),
	@Address nvarchar(255),
	@PostalCode nvarchar(255),
	@Phone nvarchar(255),
	@LocationDetails nvarchar(255),
	@PortalId int,
	@LastUpdatedDate datetime,
	@approved bit,
	@Report nvarchar(2000) = '' OUTPUT 	
AS
	Update {databaseOwner}[{objectQualifier}EngageLocator_Location]
	SET 
		ExternalIdentifier = @ExternalIdentifier, 
		[Name] = @Name, 
		Website = @Website, 
		Latitude = @Latitude, 
		Longitude = @Longitude, 
		CountryId = @CountryId, 
		RegionId = @RegionId, 
		City = @City, 
		Address = @Address, 
		PostalCode = @PostalCode, 
		Phone = @Phone, 
		LocationDetails = @LocationDetails, 
		LocationTypeId = @LocationTypeId, 
		PortalId = @PortalId, 
		LastUpdatedDate = getdate(), 
		CsvLineNumber = 0, 
		approved = @approved
	WHERE 
		LocationId = @LocationId		
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_LocationType]') AND type in (N'U'))
if not exists (select * from dbo.syscolumns where name = 'PortalId' and id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_LocationType]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationType]
ADD [PortalID] [int] NULL
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes](
	[AttributeDefinitionId] [int] IDENTITY(1,1) NOT NULL,
	[LocationTypeId] [int] NOT NULL,
	[AttributeName] [nvarchar](255),
	[DataType] [int] NULL,
	[Length] [int] NULL,
	[DefaultValue] [nvarchar](255),
	[ValidationExpression] [nvarchar],
	[Required] [bit] NOT NULL,
	[ViewOrder] [int] NOT NULL,
	[Visible] [bit] NOT NULL
)

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_LocationAttributes]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationAttributes]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationAttributes](
	[LocationAttributeId] [int] IDENTITY(1,1) NOT NULL,	
	[LocationId] [int] NOT NULL,
	[AttributeTypeId] [int] NOT NULL,
	[AttributeValue] [nvarchar](255),
	[CreateDate] [datetime] NOT NULL,
	[RevisionDate] [datetime],
	CONSTRAINT [PK_{objectQualifier}EngageLocator_LocationAttributes] PRIMARY KEY CLUSTERED 
	(
		[LocationAttributeId]
	)  ON [PRIMARY] 
)
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}EngageLocator_LocationComments_{objectQualifier}EngageLocator_Location') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] DROP CONSTRAINT FK_{objectQualifier}EngageLocator_LocationComments_{objectQualifier}EngageLocator_Location
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_LocationComments]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments](
	[LocationCommentId] [int] IDENTITY(1,1) NOT NULL,
	[LocationId] [int] NOT NULL,
	[Comment] [nvarchar](200) NOT NULL,
	[CommentAuthor] [nvarchar](50) NULL,
	[CreateDate] [datetime] NOT NULL,
	[Approved] [bit] NOT NULL,
	[ApprovedByUser] [int] NULL,
	[ApprovalDate] [datetime] NULL
) 

IF  EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_LocationComments]') AND name = N'PK_{objectQualifier}EngageLocator_LocationComments')
ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] DROP CONSTRAINT [PK_{objectQualifier}EngageLocator_LocationComments]
go

ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] WITH NOCHECK ADD 
	CONSTRAINT [PK_{objectQualifier}EngageLocator_LocationComments] PRIMARY KEY  CLUSTERED 
	(
		[LocationCommentId]
	)  ON [PRIMARY] 
GO

ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] ADD 
	CONSTRAINT [FK_{objectQualifier}EngageLocator_LocationComments_{objectQualifier}EngageLocator_Location] FOREIGN KEY 
	(
		[LocationId]
	) REFERENCES {databaseOwner}[{objectQualifier}EngageLocator_Location] (
		[LocationId]
	)
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spSaveLocationComment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spSaveLocationComment]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spSaveLocationComment]
	@commentId int,
	@comment nvarchar(255),
	@submittedBy nvarchar(50),
	@approved bit
AS
	UPDATE {databaseOwner}[{objectQualifier}EngageLocator_LocationComments]
	SET Comment = @comment, CommentAuthor = @submittedBy, Approved = @approved
	WHERE LocationCommentId = @commentId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spUpdateLocationComment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spUpdateLocationComment]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spUpdateLocationComment]
	@locationId int,
	@comment varchar(200),
	@submittedBy varchar(50),
	@approved bit,
	@userId int
AS
	Update 
		{databaseOwner}[{objectQualifier}EngageLocator_LocationComments]
	Set 
		Comment = @comment, 
		CommentAuthor = @submittedBy, 
		CreateDate = getdate(), 
		Approved = @approved, 
		ApprovalDate = getdate()	
	Where 
		LocationId = @locationId 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetLocationComments]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationComments]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationComments]
	@locationId int,
	@approved bit
AS
	SELECT lc.LocationId as 'LocationCommentId', lc.Comment, lc.CommentAuthor, l.[Name], lc.ApprovalDate
	FROM {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] lc
		join {databaseOwner}[{objectQualifier}EngageLocator_Location] l on (lc.LocationId = l.LocationId)
	where lc.LocationId = @locationId and lc.Approved = @approved
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetNewSubmittedComments]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetNewSubmittedComments]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetNewSubmittedComments]
	@portalId int,
	@approved bit
AS
	SELECT lc.LocationCommentId, lc.LocationId, lc.Comment, lc.CommentAuthor, lc.Approved, l.[Name], lc.CreateDate
	FROM 
		{databaseOwner}[{objectQualifier}EngageLocator_Location] l
		join {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] lc on (l.LocationId = lc.LocationId)
	WHERE 
		PortalId = @portalId
		and lc.Approved = @approved
	ORDER BY 
		l.[Name], CreateDate
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spInsertLocationComment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spInsertLocationComment]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spInsertLocationComment]

	@locationId int,
	@comment varchar(200),
	@submittedBy varchar(50),
	@approved bit
AS
	Insert INTO {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] (LocationId, Comment, CommentAuthor, CreateDate, Approved, ApprovalDate)
	VALUES (@locationId, @comment, @submittedBy, getdate(), @approved, getdate())
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetLocationComment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationComment]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationComment]
	@commentId int
AS
	SELECT lc.LocationCommentId, lc.LocationId, lc.Comment, lc.CommentAuthor, lc.Approved, l.[Name], lc.CreateDate
	FROM 
		{databaseOwner}[{objectQualifier}EngageLocator_Location] l
		join {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] lc on (l.LocationId = lc.LocationId)
	WHERE 
		LocationCommentId = @commentId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spAddAttributeDefinition]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spAddAttributeDefinition]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spAddAttributeDefinition]
	@PortalId [int],
	@LocationTypeId [int],
	@DataType [int],
	@DefaultValue [nvarchar] (255),
	@AttributeName [nvarchar] (255),
	@Required [bit],
	@ValidationExpression [nvarchar] (255),
	@ViewOrder [int],
	@Visible [bit],
	@Length [int]
AS
	INSERT INTO {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes]
	VALUES (@LocationTypeId, @AttributeName, @DataType, @Length, @DefaultValue, @ValidationExpression, @Required, @ViewOrder, @Visible)
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spDeleteAttributeDefinition]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spDeleteAttributeDefinition]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spDeleteAttributeDefinition]
	@AttributeDefinitionId [int]
AS
	DELETE FROM {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes]
	WHERE AttributeDefinitionId = @AttributeDefinitionId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinition]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinition]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinition]
	@AttributeDefinitionId int
AS
	SELECT * FROM {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes]
	WHERE AttributeDefinitionId = @AttributeDefinitionId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionByName]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionByName]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionByName]
	@PortalID [int],
	@Name [nvarchar] (255)
AS
	SELECT * FROM {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes] lta
	INNER JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocationType] lt ON lt.LocationTypeId = lta.LocationTypeId
	WHERE lt.PortalID = @PortalID
	AND lta.AttributeName = @Name
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByPortal]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByPortal]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByPortal]
	@portalId int
AS
	SELECT * FROM {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes] lta
	INNER JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocationType] lt ON lt.LocationTypeId = lta.LocationTypeId
	WHERE lt.PortalID = @portalId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByPortal]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByPortal]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetAttributeDefinitionsByPortal]
	@portalId int
AS
	SELECT * FROM {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes] lta
	INNER JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocationType] lt ON lt.LocationTypeId = lta.LocationTypeId
	WHERE lt.PortalID = @portalId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spDeleteLocationComment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spDeleteLocationComment]
GO


CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spDeleteLocationComment]
	@commentId int
AS
	Delete from {databaseOwner}[{objectQualifier}EngageLocator_LocationComments] where LocationCommentId = @commentId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetLocationAttributes]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationAttributes]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationAttributes]
	@locationId int
AS
	CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spGetLocationAttributes](
	@locationId int
AS
	SELECT la.AttributeValue, lta.AttributeName FROM {databaseOwner}[{objectQualifier}EngageLocator_LocationAttributes  la
	JOIN {databaseOwner}[{objectQualifier}EngageLocator_LocTypeAttributes lta on (la.AttributeTypeId = lta.AttributeDefinitionId)
	WHERE LocationId = @locationId
GO

