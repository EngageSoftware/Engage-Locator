/***********************************************/
/***                                         ***/
/***        SqlDataProvider 01.02.00         ***/
/***                                         ***/
/***********************************************/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocation]
GO

CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetLocation]
	@locationId int
AS
	SELECT 
			LocationId, ExternalIdentifier, l.[Name], Latitude, Longitude, City, region.Text as State, region.EntryId as RegionId, Address, Phone, 
			LocationDetails, LocationTypeId, PostalCode, Website, LocationDetails
		FROM 
			{databaseOwner}[{objectQualifier}EngageLocator_Location] l  
			join {databaseOwner}[{objectQualifier}Lists] region on (l.RegionId = region.EntryId)
		WHERE 
			LocationId = @locationId
			
GO

if not exists (select * from dbo.syscolumns where name = 'Successful' and id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EngageLocator_TempLocation]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EngageLocator_TempLocation]
	ADD Successful bit NULL	
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spGetImportedLocationStatistics]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetImportedLocationStatistics]
GO


CREATE Procedure {databaseOwner}[{objectQualifier}EngageLocator_spGetImportedLocationStatistics]
	@portalId int
As
	select LocationId, [Name], Successful, CSVLineNumber from {objectQualifier}EngageLocator_TempLocation Where PortalId = @portalId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}EngageLocator_spCopyLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}[{objectQualifier}EngageLocator_spCopyLocation]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}EngageLocator_spCopyLocation]
AS
INSERT INTO 
	{databaseOwner}[{objectQualifier}EngageLocator_Location] (
	ExternalIdentifier,
	[Name],
	Website,
	Latitude,
	Longitude,
	CountryId,
	RegionId,
	City,
	Address,
	PostalCode,
	Phone,
	LocationDetails,
	LocationTypeId,
	PortalId,
	LastUpdatedDate,
	CSVLineNumber
	)
SELECT 
	ExternalIdentifier,
    [Name],
	Website,
	Latitude,
	Longitude,
	CountryId,
	RegionId,
	City,
	Address,
	PostalCode,
	Phone,
	LocationDetails,
	LocationTypeId,
	PortalId,
	LastUpdatedDate,
	CSVLineNumber
FROM 
	{databaseOwner}[{objectQualifier}EngageLocator_TempLocation]
	Where Successful = 'True'

GO

DELETE FROM {databaseOwner}[{objectQualifier}Schedule] WHERE TypeFullName = 'Engage.Dnn.Locator.DataImportScheduler'
GO


