<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address.Header" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="btnAddRow.Text" xml:space="preserve">
    <value>Add New Location</value>
  </data>
  <data name="btnBack.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnSubmit.Text" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="ChooseOne.Text" xml:space="preserve">
    <value>Choose One...</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="Edit.EditText" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="FileExists.Text" xml:space="preserve">
    <value>File already exists. Please Rename or try a new file</value>
  </data>
  <data name="FileUploaded.Text" xml:space="preserve">
    <value>File has been uploaded to the processing directory.</value>
  </data>
  <data name="Details.Help" xml:space="preserve">
    <value>Specify the details to be displayed when users are viewing the location(s).</value>
  </data>
  <data name="Key.Header" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="lblAddDate.Text" xml:space="preserve">
    <value>Row Add Date</value>
  </data>
  <data name="lblAddress1.Text" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="lblAddress2.Text" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="lblAddress3.Text" xml:space="preserve">
    <value>Address 3</value>
  </data>
  <data name="lblCity.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="lblCountry.Text" xml:space="preserve">
    <value>Country Name</value>
  </data>
  <data name="lblDay1.Text" xml:space="preserve">
    <value>Meeting Day 1</value>
  </data>
  <data name="lblDay2.Text" xml:space="preserve">
    <value>Meeting Day 2</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblEditLocations.Text" xml:space="preserve">
    <value>Locations</value>
  </data>
  <data name="lblFieldNames.Text" xml:space="preserve">
    <value>Please upload a csv file with location information.  The following text boxes contain the default column headings in your csv file.  If the column headings in your csv are different than those shown, please change them so that we can find the correct information from your upload.  The upload will replace any current locations, and may taken upwards of two hours.</value>
  </data>
  <data name="lblLocationId.Text" xml:space="preserve">
    <value>Row Id</value>
  </data>
  <data name="lblImport.Text" xml:space="preserve">
    <value>Import File</value>
  </data>
  <data name="lblKey.Text" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="lblMeetingPlace.Text" xml:space="preserve">
    <value>Meeting Place</value>
  </data>
  <data name="lblModifiedDate.Text" xml:space="preserve">
    <value>Row Modified Date</value>
  </data>
  <data name="lblName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="lblState.Text" xml:space="preserve">
    <value>State Abbreviation</value>
  </data>
  <data name="lblTime1.Text" xml:space="preserve">
    <value>Meeting Time 1</value>
  </data>
  <data name="lblTime2.Text" xml:space="preserve">
    <value>Meeting Time 2</value>
  </data>
  <data name="lblWebsite.Text" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="lblZip.Text" xml:space="preserve">
    <value>PostalCode</value>
  </data>
  <data name="Location Type.Header" xml:space="preserve">
    <value>Location Type</value>
  </data>
  <data name="LocationDd.Help" xml:space="preserve">
    <value>Specify the ID you want to be displayed for administrator when viewing the location(s).</value>
  </data>
  <data name="NoFileSelected.Text" xml:space="preserve">
    <value>Please select a file to import from.</value>
  </data>
  <data name="lblLocationComments_approved.Text" xml:space="preserve">
    <value>Approved Comments</value>
  </data>
  <data name="UseCSVFile.Text" xml:space="preserve">
    <value>Please select a CSV or  file to import from.</value>
  </data>
  <data name="PostalCode.Header" xml:space="preserve">
    <value>PostalCode</value>
  </data>
  <data name="Region.Header" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="rfvCity.Text" xml:space="preserve">
    <value>Please Enter City</value>
  </data>
  <data name="rfvPostalCode.Text" xml:space="preserve">
    <value>Please select a Zip Code</value>
  </data>
  <data name="cvState.Text" xml:space="preserve">
    <value>Please Select a State</value>
  </data>
  <data name="Latitude.Header" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="lnkSetGeoCode.Text" xml:space="preserve">
    <value>Update GeoCode</value>
  </data>
  <data name="Longitude.Header" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="confirmDeleteLocation.Text" xml:space="preserve">
    <value>Are you sure you want to delete this location?</value>
  </data>
  <data name="lblConfigured.Text" xml:space="preserve">
    <value>Module is not Configured. Please go to Module Settings and configure module before managing locations.</value>
  </data>
  <data name="rbApproved.Text" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="rbWaitingForApproval.Text" xml:space="preserve">
    <value>Waiting for approval</value>
  </data>
  <data name="btnAccept.Text" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="btnDelete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="headerLocation.Text" xml:space="preserve">
    <value>LocationTest</value>
  </data>
  <data name="btnAddLocation.Text" xml:space="preserve">
    <value>Add New Location</value>
  </data>
  <data name="btnCancelComment.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnCancelLocation.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="City.Header" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="confirmDeleteComment.Text" xml:space="preserve">
    <value>Are you sure you want to delete this comment?</value>
  </data>
  <data name="Country.Header" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="lblLocationComments.Text" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Location Details.Header" xml:space="preserve">
    <value>Location Details</value>
  </data>
  <data name="Name.Header" xml:space="preserve">
    <value>Location Name</value>
  </data>
  <data name="Phone.Header" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Website.Header" xml:space="preserve">
    <value>Webste</value>
  </data>
  <data name="Comments.Header" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="deleteText.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="btnApprovedComments.Text" xml:space="preserve">
    <value> Approved&amp;nbsp;Comments</value>
  </data>
  <data name="btnNewComments.Text" xml:space="preserve">
    <value> New Comments</value>
  </data>
  <data name="cbApproved.Header" xml:space="preserve">
    <value />
  </data>
  <data name="Comment.Header" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="lblLocationComments_new.Text" xml:space="preserve">
    <value>New Comments</value>
  </data>
  <data name="Location.Header" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Submitted By.Header" xml:space="preserve">
    <value>Submitted By</value>
  </data>
  <data name="lblInstructions.Text" xml:space="preserve">
    <value>Click the browse button to locate a .csv file to import your locations.</value>
  </data>
  <data name="lgImport.Text" xml:space="preserve">
    <value>Import File</value>
  </data>
  <data name="ControlTitle_import.Text" xml:space="preserve">
    <value>Import File</value>
  </data>
</root>